---
#tasks file for netboot_vm role - ansible pull demo
  - name: Manage netboot_xyz-template vm 
    scale_computing.hypercore.vm:
      vm_name: "netboot_xyz_template-{{ ansible_hostname }}" 
      description: VM created via ansible-pull by "{{ ansible_hostname }}" # update "{{ ansible_date_time.iso8601 }}" 
      state: present
      tags:
        - demo
        - ansible-pull
      memory: "{{ '1GB' | human_to_bytes }}"
      vcpu: 2
      power_state: start
      force_reboot: true
      disks:
        - type: ide_cdrom
          disk_slot: 0
          iso_name: "netboot.xyz.iso"
        - type: ide_cdrom
          disk_slot: 1
        - type: virtio_disk
          disk_slot: 0
          size: "{{ '10 GB' | human_to_bytes }}"
      nics:
        - vlan: 0
          type: virtio
      boot_devices:
        - type: virtio_disk
          disk_slot: 0
        - type: ide_cdrom
          disk_slot: 0
      # cloud_init:
      #   user_data: |
      #     #cloud-config
      #     password: "password"
      #     chpasswd: { expire: False }
      #     ssh_pwauth: True
      #     apt: {sources: {docker.list: {source: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu $RELEASE stable', keyid: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88}}}
      #     packages: [qemu-guest-agent, docker-ce, docker-ce-cli, docker-compose, ansible, git, unzip]
      #     bootcmd:
      #       - [ sh, -c, 'sudo echo GRUB_CMDLINE_LINUX="nomodeset" >> /etc/default/grub' ]
      #       - [ sh, -c, 'sudo echo GRUB_GFXPAYLOAD_LINUX="1024x768" >> /etc/default/grub' ]
      #       - [ sh, -c, 'sudo echo GRUB_DISABLE_LINUX_UUID=true >> /etc/default/grub' ]
      #       - [ sh, -c, 'sudo update-grub' ]
      #     runcmd:
      #       - [ systemctl, restart, --no-block, qemu-guest-agent ]
      #     write_files:
      #     # configure docker daemon to be accessible remotely via TCP on socket 2375
      #     - content: |
      #         [Service]
      #         ExecStart=
      #         ExecStart=/usr/bin/dockerd -H unix:// -H tcp://0.0.0.0:2375
      #       path: /etc/systemd/system/docker.service.d/options.conf
      #   meta_data: |
      #     dsmode: local
      #     local-hostname: "{{ vmname }}"
      machine_type: BIOS
    register: vm_created